<!DOCTYPE HTML>  
<html>  
<head>  
    <title>授权页面</title>  
    <meta charset="utf-8">  
    <meta name="mobile-web-app-capable" content="yes">
     <meta name="viewport" content="width=device-width,initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no,minimal-ui">
     <link rel='stylesheet' href='/libs/bootstrap/dist/css/bootstrap.css' />
    <script type="text/javascript" src="/libs/jquery/dist/jquery.js"></script>
    <script type="text/javascript" src="/libs/bootstrap/dist/js/bootstrap.js"></script>

    <script type="text/javascript" src="/js/grid.js"></script>
    <script type="text/javascript" src="/js/version.js"></script>
    <script type="text/javascript" src="/js/detector.js"></script>
    <script type="text/javascript" src="/js/formatinf.js"></script>
    <script type="text/javascript" src="/js/errorlevel.js"></script>
    <script type="text/javascript" src="/js/bitmat.js"></script>
    <script type="text/javascript" src="/js/datablock.js"></script>
    <script type="text/javascript" src="/js/bmparser.js"></script>
    <script type="text/javascript" src="/js/datamask.js"></script>
    <script type="text/javascript" src="/js/rsdecoder.js"></script>
    <script type="text/javascript" src="/js/gf256poly.js"></script>
    <script type="text/javascript" src="/js/gf256.js"></script>
    <script type="text/javascript" src="/js/decoder.js"></script>
    <script type="text/javascript" src="/js/qrcode.js"></script>
    <script type="text/javascript" src="/js/findpat.js"></script>
    <script type="text/javascript" src="/js/alignpat.js"></script>
    <script type="text/javascript" src="/js/databr.js"></script>

    <style>
        #qr-canvas {
            position: absolute;
            top: 100px;
            left: 100px;
        }
    </style>
</head>  
<body class="container">  
    <div class="row">
        <video id="video" width="300" height="300" autoplay></video>
        <!-- <button id="snap">Snap Photo</button> -->
        <canvas id="qr-canvas" width="100" height="100"></canvas>
    </div>
    
    <div class="row">
        <canvas id="canvasA" width="100" height="100" ></canvas>
        <canvas id="canvasB" width="100" height="100" ></canvas>
    </div>
    
    <div class="row">
        <input type="button" value="按钮" id="btn1" class="btn btn-primary">
    </div>
    <script type="text/javascript"> 

// Put event listeners into place

window.addEventListener("DOMContentLoaded", function() {
    // Grab elements, create settings, etc.
    var canvas = document.getElementById("qr-canvas"),
        context = canvas.getContext("2d"),
        video = document.getElementById("video"), videoArray = [],
        errBack = function(error) {
            console.log("Video capture error: ", error.code); 
        };

    navigator.getUserMedia = navigator.getUserMedia ||
        navigator.webkitGetUserMedia || navigator.mozGetUserMedia;

    function imageConvertToGray(ctx){ 
        var length = canvas.width * canvas.height,
        imageData = ctx.getImageData(0, 0, canvas.width, canvas.height); 
        for (var i = 0; i < length * 4; i += 4) { 
            var myRed = imageData.data[i]; 
            var myGreen = imageData.data[i + 1]; 
            var myBlue = imageData.data[i + 2]; 
            myGray = parseInt((myRed + myGreen + myBlue) / 3); 
            imageData.data[i] = myGray; 
            imageData.data[i + 1] = myGray; 
            imageData.data[i + 2] = myGray; 
        } 
        ctx.putImageData(imageData, 0, 0); 
    } 

    function gotSources(sourceInfos) {
      for (var i = 0; i !== sourceInfos.length; ++i) {
        var sourceInfo = sourceInfos[i];
        if (sourceInfo.kind === 'video') {
          videoArray.push(sourceInfo.id);
          // alert(videoArray);
        } else {
          console.log('Some other kind of source: ', sourceInfo);
        }
      }
      var constraints = {
            video: {
              optional: [{
                sourceId: videoArray[1]
              }]
            }
        };
      start(constraints);
    }

    if (typeof MediaStreamTrack === 'undefined' ||
        typeof MediaStreamTrack.getSources === 'undefined') {
      alert('This browser does not support MediaStreamTrack.\n\nTry Chrome.');
        var constraints = {
            video: true
        };
        start(constraints);
    } else {
      MediaStreamTrack.getSources(gotSources);
    }

    function successCallback(stream) {
      window.stream = stream; // make stream available to console
      video.src = window.URL.createObjectURL(stream);
      video.play();
   //   setInterval(myfunc, 100);//1000为1秒钟
    }

    function errorCallback(error) {
      console.log('navigator.getUserMedia error: ', error);
    }
    var btn1 = document.getElementById("btn1");
    btn1.addEventListener('click', function() {
        if (typeof MediaStreamTrack === 'undefined' ||
            typeof MediaStreamTrack.getSources === 'undefined') {
            alert('This browser does not support MediaStreamTrack.\n\nTry Chrome.');
            var constraints = {
                video: true
            };
            start(constraints);
        } else {
          MediaStreamTrack.getSources(gotSources);
        }
    });

    function start(constraints) {
      if (!!window.stream) {
        video.src = null;
        window.stream.stop();
      }

        video.addEventListener('play', function() {
            var i = setInterval(function() {
              //  context.drawImage(video, 140,220,200,200,0,0,200,200);
              context.drawImage(video, 140,220,300,300,0,0,200,200);
                //为提高速度，可以不转换为黑白
           //     imageConvertToGray(context);
                 try{
                     qrcode.callback = function(data) {
                        alert(data);
                        console.log('the data is : ' + data);
                        //video.stop();
                        clearInterval(i);
                        video.src = null;
                        var canvasA = document.getElementById("canvasA");
                        contextA = canvasA.getContext("2d");
                        contextA.putImageData(context.getImageData(0,0,canvas.width, canvas.height),0,0);
                        context.clearRect(0,0,200,200);
                        
                        // 将解析的数据发送到服务器端

                        };
                    qrcode.decode();          
                      } catch(e) {           
                        console.log('unable to read qr code');
                    }
            }, false);
        });

        navigator.getUserMedia(constraints, successCallback, errorCallback);
    }
}, false);

    </script>  
</body>  
</html>  